{"ast":null,"code":"var _jsxFileName = \"/home/humtej1204/Front-Practice/React-Practice/carrusel-slider/src/components/swipper/Swipper.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Swipper.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  tittle: \"Tittle 1\",\n  color: \"red\"\n}, {\n  tittle: \"Tittle 2\",\n  color: \"blue\"\n}, {\n  tittle: \"Tittle 3\",\n  color: \"yellow\"\n}, {\n  tittle: \"Tittle 4\",\n  color: \"green\"\n}, {\n  tittle: \"Tittle 5\",\n  color: \"purple\"\n}]; // export function Swipper() {\n//     const [currentSlide, setCurrentSlide] = useState(0);\n//     const handleWheel = (event) => {\n//         const direction = event.deltaY < 0 ? 'up' : 'down';\n//         // Se usa una funcion flecha por que se requiere actualizar el estado anterior\n//         setCurrentSlide(prevState => {\n//             let newIndex = 0;\n//             if (direction === 'up' && prevState > 0) {\n//                 newIndex = prevState - 1;\n//             } else if (direction === 'down' && prevState < data.length - 1) {\n//                 newIndex = prevState + 1;\n//             } else newIndex = prevState;\n//             return newIndex;\n//         });\n//     }\n//     useEffect(() => {\n//         const container = document.getElementById('scrollable-container');\n//         container.addEventListener('wheel', handleWheel);\n//         return () => {\n//             container.removeEventListener('wheel', handleWheel);\n//         };\n//     }, []);\n//     useEffect(() => {\n//         console.log(currentSlide, {currentSlide});\n//     }, [currentSlide]);\n\nexport function Swipper() {\n  _s();\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const timeoutRef = useRef(null);\n\n  const handleWheel = event => {\n    if (isAnimating) return;\n    const direction = event.deltaY < 0 ? 'up' : 'down';\n    const newIndex = direction === 'up' ? currentSlide - 1 : currentSlide + 1;\n    if (newIndex < 0 || newIndex >= data.length || newIndex === currentSlide) return;\n    setIsAnimating(true);\n    setCurrentSlide(newIndex);\n  };\n\n  useEffect(() => {\n    const container = document.getElementById('scrollable-container');\n    container.addEventListener('wheel', handleWheel);\n    return () => container.removeEventListener('wheel', handleWheel);\n  }, [isAnimating]);\n  useEffect(() => {\n    timeoutRef.current = setTimeout(() => {\n      setIsAnimating(false);\n    }, 1000);\n    return () => clearTimeout(timeoutRef.current);\n  }, [currentSlide]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"scrollable-container\",\n    className: \"swipper-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swipper-inner\",\n      style: {\n        transform: `translateY(${-currentSlide * 100}vh)`\n      },\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"swipper-section\",\n        style: {\n          backgroundColor: `${item.color}`\n        },\n        children: item.tittle\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Swipper, \"Ms3KKI+lKWG6G3mTtQoT2ZhOlu8=\");\n\n_c = Swipper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swipper\");","map":{"version":3,"names":["useState","useEffect","useRef","data","tittle","color","Swipper","currentSlide","setCurrentSlide","isAnimating","setIsAnimating","timeoutRef","handleWheel","event","direction","deltaY","newIndex","length","container","document","getElementById","addEventListener","removeEventListener","current","setTimeout","clearTimeout","transform","map","item","index","backgroundColor"],"sources":["/home/humtej1204/Front-Practice/React-Practice/carrusel-slider/src/components/swipper/Swipper.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nimport \"./Swipper.css\";\n\nconst data = [\n    {tittle: \"Tittle 1\", color: \"red\"},\n    {tittle: \"Tittle 2\", color: \"blue\"},\n    {tittle: \"Tittle 3\", color: \"yellow\"},\n    {tittle: \"Tittle 4\", color: \"green\"},\n    {tittle: \"Tittle 5\", color: \"purple\"},\n];\n\n// export function Swipper() {\n//     const [currentSlide, setCurrentSlide] = useState(0);\n\n//     const handleWheel = (event) => {\n//         const direction = event.deltaY < 0 ? 'up' : 'down';\n\n//         // Se usa una funcion flecha por que se requiere actualizar el estado anterior\n//         setCurrentSlide(prevState => {\n//             let newIndex = 0;\n            \n//             if (direction === 'up' && prevState > 0) {\n//                 newIndex = prevState - 1;\n//             } else if (direction === 'down' && prevState < data.length - 1) {\n//                 newIndex = prevState + 1;\n//             } else newIndex = prevState;\n\n//             return newIndex;\n//         });\n//     }\n\n//     useEffect(() => {\n//         const container = document.getElementById('scrollable-container');\n//         container.addEventListener('wheel', handleWheel);\n\n//         return () => {\n//             container.removeEventListener('wheel', handleWheel);\n//         };\n//     }, []);\n\n//     useEffect(() => {\n//         console.log(currentSlide, {currentSlide});\n//     }, [currentSlide]);\nexport function Swipper() {\n    const [currentSlide, setCurrentSlide] = useState(0);\n    const [isAnimating, setIsAnimating] = useState(false);\n    const timeoutRef = useRef(null);\n  \n    const handleWheel = (event) => {\n      if (isAnimating) return;\n  \n      const direction = event.deltaY < 0 ? 'up' : 'down';\n      const newIndex = (direction === 'up') ? (currentSlide - 1) : (currentSlide + 1);\n  \n      if (newIndex < 0 || newIndex >= data.length || newIndex === currentSlide) return;\n  \n      setIsAnimating(true);\n      setCurrentSlide(newIndex);\n    }\n  \n    useEffect(() => {\n      const container = document.getElementById('scrollable-container');\n      container.addEventListener('wheel', handleWheel);\n  \n      return (() => container.removeEventListener('wheel', handleWheel));\n    }, [isAnimating]);\n  \n    useEffect(() => {\n      timeoutRef.current = setTimeout(() => {\n        setIsAnimating(false);\n      }, 1000);\n  \n      return (() => clearTimeout(timeoutRef.current));\n    }, [currentSlide]);\n\n    return (\n        <main id=\"scrollable-container\" className=\"swipper-content\">\n            <div \n                className=\"swipper-inner\"\n                style={{ transform: `translateY(${-currentSlide * 100}vh)`}}\n            >\n                {data.map((item, index) => (\n                    <section className=\"swipper-section\"\n                    style={{\n                        backgroundColor: `${item.color}`,\n                    }}\n                    key={index}>\n                        { item.tittle }\n                    </section>\n                ))}\n            </div>\n        </main>\n    );\n}"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,OAAO,eAAP;;AAEA,MAAMC,IAAI,GAAG,CACT;EAACC,MAAM,EAAE,UAAT;EAAqBC,KAAK,EAAE;AAA5B,CADS,EAET;EAACD,MAAM,EAAE,UAAT;EAAqBC,KAAK,EAAE;AAA5B,CAFS,EAGT;EAACD,MAAM,EAAE,UAAT;EAAqBC,KAAK,EAAE;AAA5B,CAHS,EAIT;EAACD,MAAM,EAAE,UAAT;EAAqBC,KAAK,EAAE;AAA5B,CAJS,EAKT;EAACD,MAAM,EAAE,UAAT;EAAqBC,KAAK,EAAE;AAA5B,CALS,CAAb,C,CAQA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,GAAmB;EAAA;;EACtB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAMW,UAAU,GAAGT,MAAM,CAAC,IAAD,CAAzB;;EAEA,MAAMU,WAAW,GAAIC,KAAD,IAAW;IAC7B,IAAIJ,WAAJ,EAAiB;IAEjB,MAAMK,SAAS,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAf,GAAmB,IAAnB,GAA0B,MAA5C;IACA,MAAMC,QAAQ,GAAIF,SAAS,KAAK,IAAf,GAAwBP,YAAY,GAAG,CAAvC,GAA6CA,YAAY,GAAG,CAA7E;IAEA,IAAIS,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAIb,IAAI,CAACc,MAAjC,IAA2CD,QAAQ,KAAKT,YAA5D,EAA0E;IAE1EG,cAAc,CAAC,IAAD,CAAd;IACAF,eAAe,CAACQ,QAAD,CAAf;EACD,CAVD;;EAYAf,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,CAAlB;IACAF,SAAS,CAACG,gBAAV,CAA2B,OAA3B,EAAoCT,WAApC;IAEA,OAAQ,MAAMM,SAAS,CAACI,mBAAV,CAA8B,OAA9B,EAAuCV,WAAvC,CAAd;EACD,CALQ,EAKN,CAACH,WAAD,CALM,CAAT;EAOAR,SAAS,CAAC,MAAM;IACdU,UAAU,CAACY,OAAX,GAAqBC,UAAU,CAAC,MAAM;MACpCd,cAAc,CAAC,KAAD,CAAd;IACD,CAF8B,EAE5B,IAF4B,CAA/B;IAIA,OAAQ,MAAMe,YAAY,CAACd,UAAU,CAACY,OAAZ,CAA1B;EACD,CANQ,EAMN,CAAChB,YAAD,CANM,CAAT;EAQA,oBACI;IAAM,EAAE,EAAC,sBAAT;IAAgC,SAAS,EAAC,iBAA1C;IAAA,uBACI;MACI,SAAS,EAAC,eADd;MAEI,KAAK,EAAE;QAAEmB,SAAS,EAAG,cAAa,CAACnB,YAAD,GAAgB,GAAI;MAA/C,CAFX;MAAA,UAIKJ,IAAI,CAACwB,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACN;QAAS,SAAS,EAAC,iBAAnB;QACA,KAAK,EAAE;UACHC,eAAe,EAAG,GAAEF,IAAI,CAACvB,KAAM;QAD5B,CADP;QAAA,UAKMuB,IAAI,CAACxB;MALX,GAIKyB,KAJL;QAAA;QAAA;QAAA;MAAA,QADH;IAJL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GAlDevB,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/humtej1204/ReactPractice/proyect_school/src/pages/home/components/slider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\n/* Components */\n\nimport { CarouselItem } from \"./slider-components/CarouselItem\";\nimport { CarouselControls } from \"./slider-components/CarouselControls\";\nimport { CarouselIndicators } from \"./slider-components/CarouselIndicators\";\n/* Styles */\n\nimport './slider.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Slider(_ref) {\n  _s();\n\n  let {\n    slides,\n    interval = 3000,\n    controls = false,\n    indicators = false,\n    autoPlay = true\n  } = _ref;\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slideInterval = useRef();\n\n  const switchIndex = index => {\n    startSlideTimer();\n    setCurrentSlide(index);\n  };\n\n  const startSlideTimer = () => {\n    if (autoPlay) {\n      stopSlideTimer();\n      slideInterval.current = setInterval(() => {\n        setCurrentSlide(currentSlide => currentSlide < slides.length - 1 ? currentSlide + 1 : 0);\n      }, interval);\n    }\n  };\n\n  const stopSlideTimer = () => {\n    if (autoPlay && slideInterval.current) {\n      clearInterval(slideInterval.current);\n    }\n  };\n\n  useEffect(() => {\n    startSlideTimer();\n    return () => stopSlideTimer();\n  });\n\n  const prev = () => {\n    startSlideTimer();\n    const index = currentSlide > 0 ? currentSlide - 1 : slides.length - 1;\n    setCurrentSlide(index);\n  };\n\n  const next = () => {\n    startSlideTimer();\n    const index = currentSlide < slides.length - 1 ? currentSlide + 1 : 0;\n    setCurrentSlide(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-inner\",\n      style: {\n        transform: `translateX(${-currentSlide * 100}%)`\n      },\n      children: slides.map((item, index) => /*#__PURE__*/_jsxDEV(CarouselItem, {\n        slide: item.img,\n        title: item.title,\n        description: item.description,\n        stopSlide: stopSlideTimer,\n        startSlide: startSlideTimer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), indicators && /*#__PURE__*/_jsxDEV(CarouselIndicators, {\n      slides: slides,\n      currentIndex: currentSlide,\n      switchIndex: switchIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 28\n    }, this), controls && /*#__PURE__*/_jsxDEV(CarouselControls, {\n      prev: prev,\n      next: next\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Slider, \"y1nAMcM1fXKm3hqIlfEd0Xz/WWk=\");\n\n_c = Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CarouselItem","CarouselControls","CarouselIndicators","Slider","slides","interval","controls","indicators","autoPlay","currentSlide","setCurrentSlide","slideInterval","switchIndex","index","startSlideTimer","stopSlideTimer","current","setInterval","length","clearInterval","prev","next","transform","map","item","img","title","description"],"sources":["/home/humtej1204/ReactPractice/proyect_school/src/pages/home/components/slider.jsx"],"sourcesContent":["import React, {\r\n    useState,\r\n    useEffect,\r\n    useRef\r\n} from \"react\";\r\n\r\n/* Components */\r\nimport { CarouselItem } from \"./slider-components/CarouselItem\";\r\nimport { CarouselControls } from \"./slider-components/CarouselControls\";\r\nimport { CarouselIndicators } from \"./slider-components/CarouselIndicators\";\r\n\r\n/* Styles */\r\nimport './slider.scss'\r\n\r\n\r\nexport function Slider({ slides, interval = 3000, controls = false, indicators = false, autoPlay = true }) {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    const slideInterval = useRef();\r\n\r\n    const switchIndex = (index) => {\r\n        startSlideTimer()\r\n        setCurrentSlide(index)\r\n    };\r\n\r\n    const startSlideTimer = () => {\r\n        if (autoPlay) {\r\n            stopSlideTimer();\r\n            slideInterval.current = setInterval(() => {\r\n                setCurrentSlide(currentSlide => currentSlide < slides.length - 1 ? currentSlide + 1 : 0)\r\n            }, interval)\r\n        }\r\n    }\r\n\r\n    const stopSlideTimer = () => {\r\n      if (autoPlay && slideInterval.current) {\r\n        clearInterval(slideInterval.current)\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n        startSlideTimer()\r\n\r\n        return () => stopSlideTimer()\r\n    })\r\n\r\n    const prev = () => {\r\n        startSlideTimer();\r\n        const index = currentSlide > 0 ? currentSlide - 1 : slides.length - 1;\r\n        setCurrentSlide(index);\r\n    }\r\n      \r\n    const next = () => {\r\n        startSlideTimer();\r\n        const index = currentSlide < slides.length - 1 ? currentSlide + 1 : 0;\r\n        setCurrentSlide(index);\r\n    }\r\n\r\n    return (\r\n        <div className='carousel'>\r\n            <div \r\n                className=\"carousel-inner\"\r\n                style={{ transform: `translateX(${-currentSlide * 100}%)`}}\r\n            >\r\n                {slides.map((item, index) => (\r\n                    <CarouselItem \r\n                        slide={item.img}\r\n                        title={item.title}\r\n                        description={item.description}\r\n                        key={index} \r\n                        stopSlide={stopSlideTimer}\r\n                        startSlide={startSlideTimer}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {indicators && <CarouselIndicators slides={slides} currentIndex={currentSlide} switchIndex={switchIndex} />}\r\n            {controls && <CarouselControls prev={prev} next={next} />}\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
$breakpoints: (
  "ss": 320px,
  "sm": 576px,
  "md": 768px,
  "lg": 1024px,
  "xl": 1280px,
  "2xl": 1440px,
  "4xl": 1920px,
  "2k": 2048px,
);

/*
  $property: Nombre de la Propiedad CSS que se desea usar
  $values: Variable tipo Mapa ($key: $value) donde
    $key es el $key de la constante $breakpoints y
    $value es el valor que tomara $property segun cada valor dentro de $breakpoints
*/
@mixin responsive($property, $values) {
  @if length($values) > 0 {
    @for $i from 1 through length($values) {
      $breakpoint: nth($values, $i);
      $breakpoint-name: nth($breakpoint, 1);
      $breakpoint-value: nth($breakpoint, 2);
  
      @if not ($breakpoint == null or $breakpoint-name == null or $breakpoint-value == null) {
        @media (min-width: map-get($breakpoints, $breakpoint-name)) {
          #{$property}: $breakpoint-value;
        }
      }
    }
  }
}

@mixin elem-size($w : 100%, $h : 100%) {
    width: $w;
    height: $h;
}

@mixin elem-flex($jc:flex-start, $ai:stretch, $ac:normal) {
    display: flex;
    justify-content: $jc;
    align-items: $ai;
    align-content: $ac;
}

@mixin btn-001($fstcolor, $sndcolor: #fff) {
    font-size: 1rem;
    color: $fstcolor;
    padding: 15px 2rem;
    box-sizing: content-box;
    border: 3px solid $fstcolor;
    border-radius: 25px;
    text-align: center;
    align-self: end;
    transition: all 0.4s;
    background-image: linear-gradient(to left, transparent 50%, $fstcolor 50%);
    background-size: 200%;
    background-position: 100%;

    &:hover {
        color: $sndcolor;
        background-position: 0%;
    }

    &:active {
        transform: scale(0.9)
    }
}

@mixin btn-002($color, $hover: false) {
    @include elem-flex(center, center);
    padding: 0.5rem 1rem;
    gap: 1rem;
    background-color: $color;
    border-radius: 10px;
    font-weight: 600;
    color: #fff;

    i {
        font-size: 1.25rem;
        display: flex;
    }

    @if $hover {
        &:hover {
            transform: scale(1.05);
        }
    }
}

@mixin icon-style(
  $size: 50px, $color: #666
) {
  width: $size;
  aspect-ratio: 1;
  font-size: $size;
  color: $color;
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin sep-style(
  $width, $height, $radius, $color: #666
) {
  width: $width;
  height: $height;
  background-color: $color;
  border-radius: $radius;
}

@mixin card-shadow() {
  box-shadow: 0px 0px 5px 2px rgba(#000, 0.25);
}